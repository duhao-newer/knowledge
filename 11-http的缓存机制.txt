浏览器的缓存分为强缓存和协商缓存：
1、强缓存：不需要向服务器端发送请求，直接从浏览器缓存中取；
  强缓存在 Chrome 中，强缓存又分为 Disk Cache (存放在硬盘中)和 Memory Cache (存放在内存中)，存放的位置是由浏览器控制的。是否强缓存由 Expires、Cache-Control 和 Pragma 3 个 Header 属性共同来控制。
  expires
  在三个属性中优先级最低，是一个http日期
  cache-control
  是http1.1中新增的属性
  常使用的值：
    max-age：单位是秒，缓存时间计算的方式是距离发起的时间的秒数，超过间隔的秒数缓存失效
    no-cache：不使用强缓存，需要与服务器验证缓存是否新鲜
    no-store：禁止使用缓存（包括协商缓存），每次都向服务器请求最新的资源
    private：专用于个人的缓存，中间代理、CDN 等不能缓存此响应
    public：响应可以被中间代理、CDN 等缓存
    must-revalidate：在缓存过期前可以使用，过期后必须向服务器验证
  pragma
  三个属性中优先级最高，只有一个属性值：no-cache
2、协商缓存
  有两对属性值参与控制协商缓存
  ETag/If-None-Match
  Last-Modified/If-Modified-Sine
  两者的优先级是ETag的优先级高于Last-modified
  ETag叫做资源统一标识符，是由一串hash码组成，如果请求的服务器资源内容发生变化，该hash值就会随之变动；
  在请求头中的If-None-Match会带着hash码一起访问服务器，服务器通过比较该hash值是否发生变化
  来判断该资源要不要走协商缓存。
  协商缓存会返回304状态码并走浏览器缓存；
  Last-Modified 代表的是文件的最后修改时间，服务器通过比较资源文件的最后修改时间和请求头里的If-Modified-Sine所携带的值是否相等，判断是否走协商缓存；
  